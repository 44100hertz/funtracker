* Architecture
** Samples
Samples are headerless mono signed PCM

** Instruments
Instruments are commands that replace any part of the channel state.
They can have arbitrary precision/size; for example 987654321.12345 is valid here.

Example
#+BEGIN_SRC json
"piano":{"init":"3 41h 548k 6 7 8 9 g ha-", "note":"p a50"}
#+END_SRC

Inferred meaning
#+BEGIN_EXAMPLE
piano           ; start of piano instrument block
  init          ; do the following on instrument load
    30 4100     ; 100 long sample at 0
    548000      ; sample rate 48khz
    60 7100     ; loop entire sample
    8f          ; loop forward
    8100        ; no volume adjustment
    gc001 ha-01 ; patch to ramp volume down over 1 second

note            ; do the folowing on each note played
    p0          ; play from start of sample
    a50         ; start at 50% mixer volume
#+END_EXAMPLE

** Channels
 - Channels have almost their entire state made of the params below
 - Channels store 1MB (262144) of their history in memory
 - The entire song stores that much as well

** Macros
A list of note macros is defined for each song.
Macros are executed at most one tick at a time.

Syntax
#+BEGIN_EXAMPLE
.   tick, do not set note
+n  tick, set note to base note + n
-n  tick, set note to base note - n
n   start a new note on next tick
k   end note after next tick
[   repeat to here forever
]   repeat from here forever (tick if no tick)
#+END_EXAMPLE

Examples
#+BEGIN_EXAMPLE
[n+0+3+7] repeat an arpeggio triplet
[n]       repeat note forever
k.        delayed note off by 1
#+END_EXAMPLE

** Songs
Songs are primarily plaintext, readable copies of what you see onscreen.

** Data
*** Numbers
 - decimal floating-point numbers, counting from 1
 - ~8m, 8c, .8, 8, 80, 8h, 8k~ are all possible power levels, in order
 - stacking; ~.1m~ considered valid, etc.
 - using only + or - will increment or decrement the value

*** Boolean values
 - ~y/t/1~ true
 - ~n/f/0~ false
 - will always normalize to 0/1 after entry

*** id's
An id is short for a string name.
Non-base32 chars are ignored.
If you want to make an instrument unique, you can number it.

examples
#+BEGIN_EXAMPLE
"piano"
  p, pi, pia, ... = piano

"that", "this" <--bad names
  t, th, ... = that
  thi, ... = this

"0that", "1this"
  0 = 0that
  1 = 1this
#+END_EXAMPLE

** Command format
~N-O / cXXXX~
 - ~N~ note letter
 - ~O~ octave
 - ~c~ the base id; what to modify
 - ~X~ params
  - ~n~ number
  - ~b~ bool
  - ~i~ id
  - ~[A-Z]~ special vaue

** List of Commands/Params
*** Internal
~0n~ live channel output
 - set by song if ~{4}~ > 0 and ~{5}~ > 0
 - default 0

~1i~ load instrument
 - sets and initializes
 - default 0

~2i~ set instrument
 - sets w/o initializing
 - default 0

~3n~ sample offset in points
 - default 0

~4n~ sample length
 - default 0

~5n~ sample rate
 - controls how quickly phase ~{p}~ increases
 - default 16000

~6n~ loop start
 - default 0 = start of sample

~7n~ loop length
 - default sample length

~8L~ loop type
 - f=forward (default); p=pingpong; b=backward

~9n~ volume base multiplier / 100
 - default 100 = 1x

*** Playback
~an~ mixer volume
 - ratio / 800
 - default 100=1/8

~dn~ panning
 - 100=fully right, -100 = fully left
 - default 0

~tn~ tuning adjustment
 - 100=full note
 - default 0

~pn~ live phase in points
 - set if {4} > 0  and {5} > 0

~nn~ whole note pitch
 - set by note column

*** Patches
input/output fixed pairs: ~gh / jk / lm~

~[g/j/l]*~ input
 - ~cn~ constant value n (default 1)
 - ~[num]d~ channel num, delay d in ms
 - ~ad~ the final mix, delay d in ms
 - ~ln~ an LFO n ticks per sample

~[h/k/m]O*~ output
 - ~O~ output param to modify
 - ~*~ modify method
   - ~=n~ input * n/100; default 100=1.0
   - ~wn~ wet/dry mix;  0=dry, 100=wet; default=50
   - ~+n~ base + input * n/{5}, default 1 = +1/{5}
   - ~-n~ base - input * n/{5}, default 1 = -1/{5}

examples
#+BEGIN_EXAMPLE
~g.... ha-..~ volume slide down 1/10000 per point
~g0... hp...~ total phase modulation from channel 0
~g0... htw20~ frequency modulation from channel 0
~g01k. h0w10~ mix 1000-sample delayed channel 0 into self
#+END_EXAMPLE

*** Channel Misc
~cb~ clipping mode for mixer, 1=limit to [-1, 1]

~wn~ sample rate at which to grab history, default 16000

*** Playback Control
~jjn~ next row

~jpn~ next pattern

~bn~ song BPM

~rn~ set tickrate

~vn~ global volume

*** Unused
~efuxy~ What could they be for?
